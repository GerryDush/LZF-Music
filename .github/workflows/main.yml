name: Build and Release Flutter App

on:
  push:
    tags:
      - 'v*' 

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64, universal]

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      # 切换 EXCLUDED_ARCHS
      - name: Switch EXCLUDED_ARCHS
        run: |
          PBXPROJ="macos/Runner.xcodeproj/project.pbxproj"
          ARCH=${{ matrix.arch }}
          if [[ "$ARCH" == "universal" ]]; then
            sed -i '' 's/EXCLUDED_ARCHS = .*;/EXCLUDED_ARCHS = "";/g' "$PBXPROJ"
          elif [[ "$ARCH" == "x86_64" ]]; then
            sed -i '' 's/EXCLUDED_ARCHS = .*;/EXCLUDED_ARCHS = "arm64";/g' "$PBXPROJ"
          elif [[ "$ARCH" == "arm64" ]]; then
            sed -i '' 's/EXCLUDED_ARCHS = .*;/EXCLUDED_ARCHS = "x86_64";/g' "$PBXPROJ"
          fi

      # 安装打包工具
      - run: dart pub global activate fastforge
      - run: npm install -g appdmg

      # 打包 DMG
      - run: fastforge package --platform macos --targets dmg

      # 获取 Flutter 版本号
      - name: Get Flutter version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d+ -f1)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 重命名 DMG 文件，加入架构
      - name: Rename DMG with architecture
        run: |
          ARCH=${{ matrix.arch }}
          VERSION=${{ steps.get_version.outputs.version }}
          SRC="dist/$VERSION/lzf_music-$VERSION-macos.dmg"
          DST="dist/$VERSION/LZF-Music-$VERSION-macos-$ARCH.dmg"
          mv "$SRC" "$DST"

      # 上传 macOS 制品
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-dmg
          path: dist/${{ steps.get_version.outputs.version }}/LZF-Music-${{ steps.get_version.outputs.version }}-macos-${{ matrix.arch }}.dmg
          retention-days: 1

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      # 安装 Inno Setup 6（fastforge 的依赖）
      - name: Install Inno Setup 6
        run: |
          $url = "https://jrsoftware.org/download.php/is.exe"
          $output = "${{ runner.temp }}\innosetup.exe"
          
          Write-Host "Downloading Inno Setup 6..."
          Invoke-WebRequest -Uri $url -OutFile $output
          
          Write-Host "Installing Inno Setup 6..."
          Start-Process -FilePath $output -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait
          
          # 添加到PATH
          $innoPath = "C:\Program Files (x86)\Inno Setup 6"
          echo "$innoPath" >> $env:GITHUB_PATH

      # 安装 fastforge
      - name: Install fastforge
        run: dart pub global activate fastforge

      # 创建 Windows 打包配置
      - name: Create Windows packaging config
        run: |
          # 确保目录存在
          New-Item -ItemType Directory -Force -Path "windows\packaging\exe"
          
          # 创建配置文件
          @"
          # AppId 的值唯一标识此应用
          app_id: $(New-Guid)
          publisher: Your Name
          publisher_url: https://github.com/yourusername/lzf-music
          display_name: LZF Music
          create_desktop_icon: true
          setup_icon_file: windows\runner\resources\app_icon.ico
          locales:
            - en
            - zh
          "@ | Out-File -FilePath "windows\packaging\exe\make_config.yaml" -Encoding UTF8

      # 获取 Flutter 版本号
      - name: Get Flutter version
        id: get_version
        run: |
          $VERSION = (Get-Content pubspec.yaml | Select-String "version:" | ForEach-Object { $_ -replace "version:\s*", "" } | ForEach-Object { $_ -replace "\+.*", "" })
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $env:GITHUB_OUTPUT

      # 使用 fastforge 打包 Windows exe
      - name: Package Windows exe
        run: fastforge package --platform windows --targets exe

      # 重命名生成的安装程序
      - name: Rename Windows installer
        run: |
          $VERSION = "${{ steps.get_version.outputs.version }}"
          
          # fastforge 生成的文件通常在 dist 目录中
          $DIST_DIR = "dist\$VERSION"
          $INSTALLER_NAME = "LZF-Music-$VERSION-windows-x64-setup.exe"
          
          # 查找生成的 exe 文件
          Get-ChildItem "$DIST_DIR" -Filter "*.exe" | ForEach-Object {
            $SRC = $_.FullName
            Write-Host "Found installer: $SRC"
            Copy-Item $SRC $INSTALLER_NAME -Force
            Write-Host "Renamed to: $INSTALLER_NAME"
          }

      # 上传 Windows 制品
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: LZF-Music-${{ steps.get_version.outputs.version }}-windows-x64-setup.exe
          retention-days: 1

  # 统一发布 Release
  create-release:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 获取 Flutter 版本号
      - name: Get Flutter version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d+ -f1)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 下载所有制品
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      # 创建统一的 Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            🎉 发布版本 ${{ github.ref_name }}
            
            ### 🖥️ Windows 版本
            - **安装程序**: 支持 Windows 10/11 (x64)
            - **功能**: 自动创建桌面快捷方式，支持中英文界面
            
            ### 🍎 macOS 版本  
            - **Intel (x86_64)**: 适用于 Intel Mac
            - **Apple Silicon (arm64)**: 适用于 M1/M2 Mac
            - **通用版 (universal)**: 同时支持 Intel 和 Apple Silicon
            
            ### ✨ 更新内容
            - 优化内存占用
            - 歌词页面采样率没有换算问题
            - macOS 默认窗口位置居中
            - 新增 Windows 平台支持
          files: |
            macos-x86_64-dmg/*.dmg
            macos-arm64-dmg/*.dmg
            macos-universal-dmg/*.dmg
            windows-installer/*.exe